name: Build

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]
    
env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux-armv7:
    runs-on: [self-hosted, linux, arm]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: sudo apt install libunwind-dev
      if: runner.os == 'Linux'
    - name: Build
      run: cargo build --release --verbose --examples
    - name: Test
      id: test
      continue-on-error: true
      run: cargo test --release
    - name: Test (retry#1)
      id: test1
      run: cargo test --release
      if: steps.test.outcome=='failure'
      continue-on-error: true
    - name: Test (retry#2)
      run: cargo test --release
      if: steps.test1.outcome=='failure'
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build Wheel
      run: |
        pip install --upgrade wheel pip setuptools
        python setup.py bdist_wheel
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist
      if: runner.os != 'Linux'

  build-linux-cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [i686-musl, armv7-musleabihf, aarch64-musl, x86_64-musl]
    container:
      image: docker://benfred/rust-musl-cross:${{ matrix.target }}
      env:
        RUSTUP_HOME: /root/.rustup
        CARGO_HOME: /root/.cargo
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: python3 setup.py bdist_wheel
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  test_wheels:
    name: Test Wheels
    needs: [build, build-linux-cross]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [2.7.18, 3.5.4, 3.5.9, 3.5.10, 3.6.7, 3.6.8, 3.6.9, 3.6.10, 3.6.11, 3.6.12, 3.6.13, 3.7.1, 3.7.5, 3.7.6, 3.7.7, 3.7.8, 3.7.9, 3.7.10, 3.8.0, 3.8.1, 3.8.2, 3.8.3, 3.8.4, 3.8.5, 3.8.6, 3.8.7, 3.8.8, 3.8.9, 3.9.0, 3.9.1, 3.9.2, 3.9.3, 3.9.4]
        # TODO: also test windows
        os: [ubuntu-latest, macos-latest]
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install wheel
        run: |
          pip install --no-index --find-links . py-spy
      - name: Test Wheel
        run: python tests/integration_test.py
        if: runner.os != 'macOS'
      - name: Test macOS Wheel
        run: sudo "PATH=$PATH" python tests/integration_test.py
        if: runner.os == 'macOS'


  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [test_wheels]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Create GitHub Release
        uses: fnkr/github-action-ghr@v1.3
        env:
          GHR_PATH: .
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Dependencies
        run: sudo apt install libunwind-dev
        if: runner.os == 'Linux'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Push to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade wheel pip setuptools twine
          twine upload *
          rm *
      - uses: actions/checkout@v2
      - name: Push to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish
